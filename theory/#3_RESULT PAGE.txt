
#3.1 Result 구현하기 (1)

학습 목표
- Result 구현 (1)

모든 질문에 답변을 다 한 후, 결과로 이동하도록

  <!-- index.html -->
  <!DOCTYPE html>
  <html lang="ko">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <title>십이간지로 알아보는 연애 유형</title>
      <link
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
        rel="stylesheet"
        integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"
        crossorigin="anonymous"
      />
      <link rel="preconnect" href="https://fonts.googleapis.com" />
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
      <link
        href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;700;900&display=swap"
        rel="stylesheet"
      />
      <link rel="stylesheet" href="./css/default.css" />
      <link rel="stylesheet" href="./css/main.css" />
      <link rel="stylesheet" href="./css/qna.css" />
      <link rel="stylesheet" href="./css/animation.css" />
      <link rel="stylesheet" href="./css/result.css" />
    </head>
    <body>
      <div class="container">
        <section id="main" class="mx-auto my-5 px-3 py-5">
          <h3>십이간지로 알아보는 연애 유형</h3>
          <div class="col-lg-6 col-md-8 col-sm-10 col-12 mx-auto">
            <img src="./img/main.png" class="img-fluid" alt="mainImage" />
          </div>
          <p>버튼을 눌러 시작해주세요 !</p>
          <button
            type="button"
            class="btn btn-outline-warning mt-3"
            onclick="js:begin()"
          >
            시작하기
          </button>
        </section>

        <section id="qna">
          <div class="status mx-auto mt-5">
            <div class="statusBar"></div>
          </div>
          <div class="qBox my-5 py-5 mx-auto"></div>
          <div class="answerBox"></div>
        </section>

        <section id="result">
          <h3>당신의 결과는 ?</h3>
          <div class="resultname"></div>
          <div
            id="resultImg"
            class="col-lg-6 col-md-8 col-sm-10 col-12 mx-auto"
          ></div>
          <div class="resultDesc"></div>
          <button type="button">공유하기</button>
        </section>
        <script src="./js/data.js" charset="utf-8"></script>
        <script src="./js/start.js" charset="utf-8"></script>
      </div>
    </body>
  </html>


  /* result.css */
  #result {
    display: none;
  }


  // start.js
  const main = document.querySelector('#main');
  const qna = document.querySelector('#qna');
  const result = document.querySelector('#result');
  const endPoint = 12;

  function begin() {
    main.style.WebkitAnimation = 'fadeOut 0.8s';
    main.style.animation = 'fadeOut 0.8s';

    setTimeout(() => {
      qna.style.WebkitAnimation = 'fadeIn 0.8s';
      qna.style.animation = 'fadeIn 0.8s';
      setTimeout(() => {
        main.style.display = 'none';
        qna.style.display = 'block';
      }, 380);
      let qIdx = 0;
      goNext(qIdx);
    }, 380);
  }

  function goNext(qIdx) {
    var q = document.querySelector('.qBox');
    q.innerHTML = qnaList[qIdx].q;

    for (let i in qnaList[qIdx].a) {
      addAnswer(qnaList[qIdx].a[i].answer, qIdx);
    }
    var status = document.querySelector('.statusBar');
    status.style.width = (100 / endPoint) * (qIdx + 1) + '%';

    if (qIdx === endPoint) {
      goResult();
      return;
    }
  }

  function addAnswer(answerText, qIdx) {
    var a = document.querySelector('.answerBox');
    var answer = document.createElement('button');
    answer.classList.add('answerList');
    answer.classList.add('my-3');
    answer.classList.add('py-5');
    answer.classList.add('mx-auto');
    answer.classList.add('fadeIn');
    a.appendChild(answer);
    answer.innerHTML = answerText;

    answer.addEventListener(
      'click',
      function () {
        var children = document.querySelectorAll('.answerList');
        for (let i = 0; i < children.length; i++) {
          children[i].disabled = true;
          children[i].style.WebkitAnimation = 'fadeOut 0.5s';
          children[i].style.animation = 'fadeOut 0.5s';
        }
        setTimeout(() => {
          for (let i = 0; i < children.length; i++) {
            children[i].style.display = 'none';
          }
          goNext(++qIdx);
        }, 50);
      },
      false,
    );
  }

  function goResult() {
    qna.style.WebkitAnimation = 'fadeOut 0.8s';
    qna.style.animation = 'fadeOut 0.8s';

    setTimeout(() => {
      result.style.WebkitAnimation = 'fadeIn 0.8s';
      result.style.animation = 'fadeIn 0.8s';
      setTimeout(() => {
        qna.style.display = 'none';
        result.style.display = 'block';
      }, 380);
    });
  }


#3.2 결과 계산하기

학습 목표
1. 결과 계산
    - sort

https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/sort


  // start.js
  const main = document.querySelector('#main');
  const qna = document.querySelector('#qna');
  const result = document.querySelector('#result');
  const endPoint = 12;
  const select = [];

  function calResult() {
    var pointArray = [
      { name: 'mouse', value: 0, key: 0 },
      { name: 'cow', value: 0, key: 1 },
      { name: 'tiger', value: 0, key: 2 },
      { name: 'rabbit', value: 0, key: 3 },
      { name: 'dragon', value: 0, key: 4 },
      { name: 'snake', value: 0, key: 5 },
      { name: 'horse', value: 0, key: 6 },
      { name: 'sheep', value: 0, key: 7 },
      { name: 'monkey', value: 0, key: 8 },
      { name: 'chick', value: 0, key: 9 },
      { name: 'dog', value: 0, key: 10 },
      { name: 'pig', value: 0, key: 11 },
    ];

    for (let i = 0; i < endPoint; i++) {
      var target = qnaList[i].a[select[i]];
      for (let j = 0; j < target.type.length; j++) {
        for (let k = 0; k < pointArray.length; k++) {
          if (target.type[j] === pointArray[k].name) {
            pointArray[k].value += 1;
          }
        }
      }
    }

    var resultArray = pointArray.sort(function (a, b) {
      if (a.value > b.value) {
        return -1;
      }
      if (a.value < b.value) {
        return 1;
      }
      return 0;
    });
    console.log(resultArray);
    let resultWord = resultArray[0].key;
    return resultWord;
  }

  function goResult() {
    qna.style.WebkitAnimation = 'fadeOut 0.8s';
    qna.style.animation = 'fadeOut 0.8s';

    setTimeout(() => {
      result.style.WebkitAnimation = 'fadeIn 0.8s';
      result.style.animation = 'fadeIn 0.8s';
      setTimeout(() => {
        qna.style.display = 'none';
        result.style.display = 'block';
      }, 380);
    });
    calResult();
  }

  function addAnswer(answerText, qIdx, idx) {
    var a = document.querySelector('.answerBox');
    var answer = document.createElement('button');
    answer.classList.add('answerList');
    answer.classList.add('my-3');
    answer.classList.add('py-5');
    answer.classList.add('mx-auto');
    answer.classList.add('fadeIn');
    a.appendChild(answer);
    answer.innerHTML = answerText;

    answer.addEventListener(
      'click',
      function () {
        var children = document.querySelectorAll('.answerList');
        for (let i = 0; i < children.length; i++) {
          children[i].disabled = true;
          children[i].style.WebkitAnimation = 'fadeOut 0.5s';
          children[i].style.animation = 'fadeOut 0.5s';
        }
        setTimeout(() => {
          select[qIdx] = idx;
          for (let i = 0; i < children.length; i++) {
            children[i].style.display = 'none';
          }
          goNext(++qIdx);
        }, 50);
      },
      false,
    );
  }

  function goNext(qIdx) {
    var q = document.querySelector('.qBox');
    q.innerHTML = qnaList[qIdx].q;

    for (let i in qnaList[qIdx].a) {
      addAnswer(qnaList[qIdx].a[i].answer, qIdx, i);
    }
    var status = document.querySelector('.statusBar');
    status.style.width = (100 / endPoint) * (qIdx + 1) + '%';

    if (qIdx === endPoint) {
      goResult();
      return;
    }
  }

  function begin() {
    main.style.WebkitAnimation = 'fadeOut 0.8s';
    main.style.animation = 'fadeOut 0.8s';

    setTimeout(() => {
      qna.style.WebkitAnimation = 'fadeIn 0.8s';
      qna.style.animation = 'fadeIn 0.8s';
      setTimeout(() => {
        main.style.display = 'none';
        qna.style.display = 'block';
      }, 380);
      let qIdx = 0;
      goNext(qIdx);
    }, 380);
  }

!!! 문제
- 모든 질문에 답변을 마치고 결과로 이동하지 못하고 있다 .. 왜일까


#3.3 알고리즘 개선하기

학습 목표
- 알고리즘 개선

저번 시간 + 이렇게 알고리즘을 짠 이유가
javascript는 배열을 위해서 여러 가지 함수를 제공하는데, 그런 함수를 최소한으로 사용하면서 직관적으로 만들려고 했는데

다소 비효율적인 부분이 많은 것 같아서 (=일차원적인 접근으로 계산했다)
조금만 응용해서 알고리즘을 개선해보자

vsc 단축키
단어 선택하고 (ctrl + D) 하면 그 단어 전부 선택됨
⇒ 기존 data.js에 type을 숫자로 수정


  // function calResult
  var result = select.indexOf(Math.max(...select));

  /* 코드 해석
  indexOf는 index값을 반환하는 것이고,
  Math.max로 인해서 소괄호 안에 주어진 것의 최대값이 반환됨
  (...select) 전개구문으로 선택한 배열을 펼치게 해줌

  그래서 배열의 최대값을 갖고 있는 index를 반환하게 됨 */


  // start.js
  const main = document.querySelector('#main');
  const qna = document.querySelector('#qna');
  const result = document.querySelector('#result');

  const endPoint = 12;
  const select = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

  function calResult() {
    console.log(select);
    var result = select.indexOf(Math.max(...select));
    return result;
  }

  function setResult() {
    let point = calResult();
    const resultName = document.querySelector('.resultname');
    resultName.innerHTML = infoList[point].name;

    var resultImg = document.createElement('img');
    const imgDiv = document.querySelector('#resultImg');
    var imgURL = 'img/image-' + point + '.png';
    resultImg.src = imgURL;
    resultImg.alt = point;
    resultImg.classList.add('img-fluid');
    imgDiv.appendChild(resultImg);

    const resultDesc = document.querySelector('.resultDesc');
    resultDesc.innerHTML = infoList[point].desc;
  }

  function goResult() {
    qna.style.WebkitAnimation = 'fadeOut 1s';
    qna.style.animation = 'fadeOut 1s';
    setTimeout(() => {
      result.style.WebkitAnimation = 'fadeIn 1s';
      result.style.animation = 'fadeIn 1s';
      setTimeout(() => {
        qna.style.display = 'none';
        result.style.display = 'block';
      }, 450);
    });
    setResult();
  }

  function addAnswer(answerText, qIdx, idx) {
    var a = document.querySelector('.answerBox');
    var answer = document.createElement('button');
    answer.classList.add('answerList');
    answer.classList.add('my-3');
    answer.classList.add('py-3');
    answer.classList.add('mx-auto');
    answer.classList.add('fadeIn');

    a.appendChild(answer);
    answer.innerHTML = answerText;

    answer.addEventListener(
      'click',
      function () {
        var children = document.querySelectorAll('.answerList');
        for (let i = 0; i < children.length; i++) {
          children[i].disabled = true;
          children[i].style.WebkitAnimation = 'fadeOut 0.5s';
          children[i].style.animation = 'fadeOut 0.5s';
        }
        setTimeout(() => {
          var target = qnaList[qIdx].a[idx].type;
          for (let i = 0; i < target.length; i++) {
            select[target[i]] += 1;
          }

          for (let i = 0; i < children.length; i++) {
            children[i].style.display = 'none';
          }
          goNext(++qIdx);
        }, 450);
      },
      false,
    );
  }

  function goNext(qIdx) {
    if (qIdx === endPoint) {
      goResult();
      return;
    }

    var q = document.querySelector('.qBox');
    q.innerHTML = qnaList[qIdx].q;
    for (let i in qnaList[qIdx].a) {
      addAnswer(qnaList[qIdx].a[i].answer, qIdx, i);
    }
    var status = document.querySelector('.statusBar');
    status.style.width = (100 / endPoint) * (qIdx + 1) + '%';
  }

  function begin() {
    main.style.WebkitAnimation = 'fadeOut 1s';
    main.style.animation = 'fadeOut 1s';
    setTimeout(() => {
      qna.style.WebkitAnimation = 'fadeIn 1s';
      qna.style.animation = 'fadeIn 1s';
      setTimeout(() => {
        main.style.display = 'none';
        qna.style.display = 'block';
      }, 450);
      let qIdx = 0;
      goNext(qIdx);
    }, 450);
  }

tlqkf 아무리 따라 하고 수정해도 결과 뜨는 거 안되길래 깃허브에 올라온 거 복붙함
갑자기 `function setResult()` 생겨있었음 아마 영상 다시 찍으면서 편집 잘못했나 봄


#3.4 Result 구현하기 (2) + 꾸미기

강의 순서가 #3.3과 순서가 바뀜


`resultImg.alt = point;`는 카카오톡 공유하기 만들 때 쓸 예정


만든 `img`를 `imgDiv.appendChild(resultImg);`로 연결

appendChild ()
: 선택한 요소 안에 자식요소를 추가한다.